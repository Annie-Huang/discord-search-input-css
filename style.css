:root {
  --bg-color: hsl(223, 6.7%, 20.6%);
  --bg-color-dark: hsl(225, 6.3%, 12.5%);
  --foreground-color: hsl(210, 9.1%, 87%);
  --foreground-color-dark: hsl(214, 8.1%, 61.2%);
  --outline-color: hsl(200, 100%, 50%);
}

body {
  background-color: var(--bg-color);
  color: var(--foreground-color);
  font-family: Helvetica, Arial, sans-serif;
  margin: 0;
}

.row {
  display: flex;
  gap: 1rem;
  margin: 1rem;
  margin-top: 2rem;
}

.box {
  width: 30px;
  background-color: var(--foreground-color-dark);
}

.input {
  background-color: var(--bg-color-dark);
  color: var(--foreground-color);
  border: none;
  width: 9em;
  transition: width 0.25s;
  outline: none;
  border-radius: 0.25em;
  padding: 0.375em;
  font-size: 0.875em;
}

@media (prefers-reduced-motion: reduce) {
  .input {
    transition: none;
  }
}

.input::placeholder {
  color: var(--foreground-color-dark);
}

.input:focus-visible,
button:focus-visible {
  box-shadow: 0 0 0 0.25rem var(--outline-color);
}

.input:focus,
/* Meaning if there is text entered in the <input>, when user tab out, we still want to keep the long width */
.input:not(:placeholder-shown) {
  width: 15em;
}

.search-wrapper {
  position: relative;
}

.search-icon,
.x-icon {
  position: absolute;
  width: 1rem;
  height: 1rem;
  right: 0.25rem;
  top: 50%;
  translate: 0 -50%;
  color: var(--foreground-color-dark);

  /* OMG, I cannot believe they use the same trick that I use for coles's search box. */
  opacity: 0;
  pointer-events: none;
  /* !!!! You will need to add the below to make it totally untabable, if you just use above, you just cannot click, but still be able to tab into it. */
  visibility: hidden;
}

button {
  all: unset; /* remove all agent styles for buttons */
  cursor: pointer;
}
